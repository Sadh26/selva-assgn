name: Run Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on PR to the master/main branch. 
  # It is advised to work on a feature branch and not the master/main branch.
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains one job: It opens the project file and runs the test vis from Tests folder.

  run-tests:
    # Set the self hosted runner
    runs-on: self-hosted

    steps:
      # Checkout the repository to the runner
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Run Tests
        run: |
        
          $starting_directory = "${{ github.workspace }}\src"
          $errorIn = "false"
          $isFileExist = $false

          # The starting directory for iteration
          $test_directory = "Tests"


          # Function to find test vi files
          function Find-ViFiles {
              param (
                  [string]$path
              )

              Get-ChildItem $path -Recurse | ForEach-Object {
                  if ($_.PSIsContainer) {
                      Find-ViFiles $_.FullName
                  }
                  elseif ($_.Extension -eq ".vi") {
                      $isFileExist = $true
                      Write-Output ("`n`nFound .vi file: " + $_.FullName)
                      Write-Output ("Running unit test file " + $_.FullName)
                      $output = g-cli --lv-ver 2020 $_.FullName
                      Write-Output ("$output")
                      if ($output -ne $null) {
                        $errorIn = "true"
                      }
                  }
              }
              if ($isFileExist -eq $false) {
                Write-Output "No test files found"
              }
              if ($errorIn -eq "true") {
                return $true
              }
              else {
                return $false
              }
          } 

          # Function to find .lvproj files
          function Find-lvprojFiles {
              param (
                  [string]$directory
              )

              $lvprojFiles = Get-ChildItem -Path $directory -Recurse -Filter *.lvproj -File

              foreach ($lvprojFile in $lvprojFiles) {
                  Write-Host ("Found .lvproj file: " + $lvprojFile.FullName)
                  LabVIEWCLI -OperationName RunVI -VIPath "${{ github.workspace }}\src\Project file\OpenProject.vi" $lvprojFile.FullName
                  $folder_name = "$(Split-Path $lvprojFile.FullName -Parent)\$test_directory"
                  if (Test-Path -Path $folder_name -PathType Container)
                  {
                    $errorIn = Find-ViFiles "$folder_name"
                  }
                  else 
                  {
                    Write-Output "No test folder found"
                  }
              }
              if ($errorIn -eq "true") {
                Write-Output "Error Exist..."
                Exit 1
              }
          }


          # Calling Find-lvprojFiles function with input parameter starting_directory
          Find-lvprojFiles $starting_directory
      



